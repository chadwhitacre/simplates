=Example 3: Redirecting to Another Page=

This example introduces two things:

  # the _import_ section of a simplate
  # ending a request with `raise SystemExit(response)`

As a contrived example, we will redirect from http://www.example.com/old.html to http://www.example.com/new.html.


=== settings.py ===

{{{
SIMPLATE_DIRS = (
     '/path/to/simplates',
)
}}}


=== urls.py ===

{{{

from django.conf.urls.defaults import *
from simplates.views import direct_to_simplate


urlpatterns = patterns('',
    (r'^.*\.html$', direct_to_simplate),
)

}}}


=== simplate at /path/to/simplates/old.html ===

This simplate has three sections, all separated by this line:

{{{
#<!--===BREAK===-->
}}}

[EgGreetingsProgramDynamic Again], this token was chosen so that it is syntax-highlighted as a comment in your editor whether you are using HTML or Python highlighting (to work efficiently with simplates, you'll want to set up a key mapping in your editor to quickly switch between these highlighting modes).

The first section is only run once, when the simplate is hit for the first time. Use it for doing Python imports and defining constants. The second section is a Django view, and the third section is a Django template. Any objects you define in the first (import) or second (view) sections become part of the context for the third (template) section.

Now let's look at `raise SystemExit`, aka `sys.exit()`. Here's how `SystemExit` behaves from inside a simplate:

  * `raise SystemExit(response)` _skips_ all further processing (returns `response` directly)
  * `raise SystemExit` [without passing in a `response` object] _proceeds to_ further processing (skips rest of simplate view code)

Here is the content of our simplate for this example:

{{{
from django.http import HttpResponseRedirect


#<!--===BREAK===-->

raise SystemExit(HttpResponseRedirect('/new.html'))


#<!--===BREAK===-->

<p>No-one will ever see this.</p>
}}}

Note that you do need the third section, even though no-one will ever see it. This is because with only two sections, the simplates engine would interpret the second section as a template, and the first section as a view.


== Next Example: [EgFormProcessing Processing a Form] ==