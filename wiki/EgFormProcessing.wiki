=Example 4: Processing a Form=

This example introduces:

  # `POST`ing to yourself, a common pattern with simplates
  # accessing the `request` object from a simplate

For this example, we will implement a simple contact form.


=== settings.py ===

{{{
SIMPLATE_DIRS = (
    '/path/to/simplates',
)
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.request'
)
}}}

Note that we have enabled [http://docs.djangoproject.com/en/dev/ref/templates/api/#django-core-context-processors-request the "request" context processor] (the others are [http://docs.djangoproject.com/en/dev/ref/templates/api/#id1 the defaults], which we don't want to lose). We need the `request` context processor in order to access the `request` object from our simplate later on.


=== urls.py ===

{{{
from django.conf.urls.defaults import *
from simplates.views import direct_to_simplate


urlpatterns = patterns('',
    (r'^contact.html$', direct_to_simplate),
)
}}}


=== simplate at /path/to/simplates/contact.html ===

By now, you should know that a simplate has [EgRedirect up to three sections], separated by this line:

{{{
#<!--===BREAK===-->
}}}

The sections are:

  # *import*--Python, run once
  # *view*--Python, run every request
  # *template*--Django template

The objects from the Python sections are available in the template section.

Here is the content of our simplate for this example (compare this with [http://docs.djangoproject.com/en/1.0/topics/forms/#form-objects Django's contact form example without simplates]):

{{{
from django.forms import *
from django.http import HttpResponseRedirect


class ContactForm(forms.Form):
    subject = forms.CharField(max_length=100)
    message = forms.CharField()
    sender = forms.EmailField()
    cc_myself = forms.BooleanField(required=False)


#<!--===BREAK===-->

if request.method == 'POST': # If the form has been submitted...
    form = ContactForm(request.POST) # A form bound to the POST data
    if form.is_valid(): # All validation rules pass
        # Process the data in form.cleaned_data
        # ...
        raise SystemExit(HttpResponseRedirect('/thanks/')) # Redirect after POST
else:
    form = ContactForm() # An unbound form


#<!--===BREAK===-->

<form action="{{ request.META.PATH_INFO }}" method="POST">
{{ form.as_p }}
<input type="submit" value="Submit" />
</form>
}}}


== Next Example: [EgImageGeneration Generating an Image Dynamically] ==